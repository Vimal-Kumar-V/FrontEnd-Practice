{"ast":null,"code":"var _jsxFileName = \"/Users/vk/Desktop/Practice/React/quiz-trivia/src/quizPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./quizPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet questions = [{\n  \"_id\": 1,\n  \"question\": \"What is your Name\",\n  \"options\": [{\n    \"key\": \"1\",\n    \"_id\": \"1\",\n    \"value\": \"Devil\",\n    \"selected\": false\n  }, {\n    \"key\": \"2\",\n    \"_id\": \"2\",\n    \"value\": \"Vk\",\n    \"selected\": false\n  }, {\n    \"key\": \"3\",\n    \"_id\": \"3\",\n    \"value\": \"Joker\",\n    \"selected\": false\n  }, {\n    \"key\": \"4\",\n    \"_id\": \"4\",\n    \"value\": \"IronMan\",\n    \"selected\": false\n  }]\n}, {\n  \"_id\": 2,\n  \"question\": \"What is your Name\",\n  \"options\": [{\n    \"key\": \"1\",\n    \"_id\": \"1\",\n    \"value\": \"Devil\",\n    \"selected\": false\n  }, {\n    \"key\": \"2\",\n    \"_id\": \"2\",\n    \"value\": \"Vk\",\n    \"selected\": false\n  }, {\n    \"key\": \"3\",\n    \"_id\": \"3\",\n    \"value\": \"Joker\",\n    \"selected\": false\n  }, {\n    \"key\": \"4\",\n    \"_id\": \"4\",\n    \"value\": \"IronMan\",\n    \"selected\": false\n  }]\n}, {\n  \"_id\": 3,\n  \"question\": \"What is your Name\",\n  \"options\": [{\n    \"key\": \"1\",\n    \"_id\": \"1\",\n    \"value\": \"Devil\",\n    \"selected\": false\n  }, {\n    \"key\": \"2\",\n    \"_id\": \"2\",\n    \"value\": \"Vk\",\n    \"selected\": false\n  }, {\n    \"key\": \"3\",\n    \"_id\": \"3\",\n    \"value\": \"Joker\",\n    \"selected\": false\n  }, {\n    \"key\": \"4\",\n    \"_id\": \"4\",\n    \"value\": \"IronMan\",\n    \"selected\": false\n  }]\n}, {\n  \"_id\": 4,\n  \"question\": \"What is your Name\",\n  \"options\": [{\n    \"key\": \"1\",\n    \"_id\": \"1\",\n    \"value\": \"Devil\",\n    \"selected\": false\n  }, {\n    \"key\": \"2\",\n    \"_id\": \"2\",\n    \"value\": \"Vk\",\n    \"selected\": false\n  }, {\n    \"key\": \"3\",\n    \"_id\": \"3\",\n    \"value\": \"Joker\",\n    \"selected\": false\n  }, {\n    \"key\": \"4\",\n    \"_id\": \"4\",\n    \"value\": \"IronMan\",\n    \"selected\": false\n  }]\n}, {\n  \"_id\": 5,\n  \"question\": \"What is your Name\",\n  \"options\": [{\n    \"key\": \"1\",\n    \"_id\": \"1\",\n    \"value\": \"Devil\",\n    \"selected\": false\n  }, {\n    \"key\": \"2\",\n    \"_id\": \"2\",\n    \"value\": \"Vk\",\n    \"selected\": false\n  }, {\n    \"key\": \"3\",\n    \"_id\": \"3\",\n    \"value\": \"Joker\",\n    \"selected\": false\n  }, {\n    \"key\": \"4\",\n    \"_id\": \"4\",\n    \"value\": \"IronMan\",\n    \"selected\": false\n  }]\n}];\nexport default function QuizPage() {\n  _s();\n  function optionSelect(question_id, option_id) {\n    let latestState = [];\n    setQuestion(prevQuestion => {\n      for (let question of prevQuestion) {\n        if (question._id === question_id) {\n          question.options.map(option => op);\n        }\n      }\n    });\n  }\n  const [question, setQuestion] = useState(questions);\n  let questionUI = question.map(currQuestion => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"questions\",\n      children: currQuestion.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"options\",\n      children: currQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => optionSelect(question._id, option._id),\n        className: option.selected ? \"selected-option\" : \"unselected:option\",\n        children: option.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-option\",\n    children: questionUI\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizPage, \"ExRGBPHSkwLwDK+xZCC4zAU8LwI=\");\n_c = QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","questions","QuizPage","_s","optionSelect","question_id","option_id","latestState","setQuestion","prevQuestion","question","_id","options","map","option","op","questionUI","currQuestion","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","selected","value","_c","$RefreshReg$"],"sources":["/Users/vk/Desktop/Practice/React/quiz-trivia/src/quizPage.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./quizPage.css\"\nlet questions = [\n    {\n        \"_id\": 1,\n        \"question\": \"What is your Name\",\n        \"options\": [\n            {\"key\": \"1\",  \"_id\": \"1\", \"value\": \"Devil\", \"selected\": false},\n            {\"key\": \"2\",  \"_id\": \"2\", \"value\": \"Vk\", \"selected\": false},\n            {\"key\": \"3\",  \"_id\": \"3\", \"value\": \"Joker\", \"selected\": false},\n            {\"key\": \"4\",  \"_id\": \"4\", \"value\": \"IronMan\", \"selected\": false},\n        ]\n    },\n    {\n        \"_id\": 2,\n        \"question\": \"What is your Name\",\n        \"options\": [\n            {\"key\": \"1\",  \"_id\": \"1\", \"value\": \"Devil\", \"selected\": false},\n            {\"key\": \"2\",  \"_id\": \"2\", \"value\": \"Vk\", \"selected\": false},\n            {\"key\": \"3\",  \"_id\": \"3\", \"value\": \"Joker\", \"selected\": false},\n            {\"key\": \"4\",  \"_id\": \"4\", \"value\": \"IronMan\", \"selected\": false},\n        ]\n    },\n    {\n        \"_id\": 3,\n        \"question\": \"What is your Name\",\n        \"options\": [\n            {\"key\": \"1\",  \"_id\": \"1\", \"value\": \"Devil\", \"selected\": false},\n            {\"key\": \"2\",  \"_id\": \"2\", \"value\": \"Vk\", \"selected\": false},\n            {\"key\": \"3\",  \"_id\": \"3\", \"value\": \"Joker\", \"selected\": false},\n            {\"key\": \"4\",  \"_id\": \"4\", \"value\": \"IronMan\", \"selected\": false},\n        ]\n    },\n    {\n        \"_id\": 4,\n        \"question\": \"What is your Name\",\n        \"options\": [\n            {\"key\": \"1\",  \"_id\": \"1\", \"value\": \"Devil\", \"selected\": false},\n            {\"key\": \"2\",  \"_id\": \"2\", \"value\": \"Vk\", \"selected\": false},\n            {\"key\": \"3\",  \"_id\": \"3\", \"value\": \"Joker\", \"selected\": false},\n            {\"key\": \"4\",  \"_id\": \"4\", \"value\": \"IronMan\", \"selected\": false},\n        ]\n    },\n    {\n        \"_id\": 5,\n        \"question\": \"What is your Name\",\n        \"options\": [\n            {\"key\": \"1\",  \"_id\": \"1\", \"value\": \"Devil\", \"selected\": false},\n            {\"key\": \"2\",  \"_id\": \"2\", \"value\": \"Vk\", \"selected\": false},\n            {\"key\": \"3\",  \"_id\": \"3\", \"value\": \"Joker\", \"selected\": false},\n            {\"key\": \"4\",  \"_id\": \"4\", \"value\": \"IronMan\", \"selected\": false},\n        ]\n    }\n]\nexport default function QuizPage(){\n    function optionSelect(question_id, option_id){\n        let latestState = [];\n        setQuestion(prevQuestion => {\n            for (let question of prevQuestion){\n                if (question._id === question_id){\n                    question.options.map(option => op)\n                }\n            }\n        })\n    }\n\n    const [question, setQuestion] = useState(questions);\n    let questionUI = question.map(currQuestion => (\n        <div>\n            <p className=\"questions\">{currQuestion.question}</p>\n            <ul className=\"options\">\n                {currQuestion.options.map(option => \n                    <li onClick={()=>optionSelect(question._id, option._id)} className={option.selected?\"selected-option\": \"unselected:option\"}>\n                        {option.value}\n                    </li>)}\n             </ul>\n        </div>\n    ))\n    return (\n        <div className=\"question-option\">\n            {questionUI}\n        </div>\n    )\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACvB,IAAIC,SAAS,GAAG,CACZ;EACI,KAAK,EAAE,CAAC;EACR,UAAU,EAAE,mBAAmB;EAC/B,SAAS,EAAE,CACP;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,OAAO;IAAE,UAAU,EAAE;EAAK,CAAC,EAC9D;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,IAAI;IAAE,UAAU,EAAE;EAAK,CAAC,EAC3D;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,OAAO;IAAE,UAAU,EAAE;EAAK,CAAC,EAC9D;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,SAAS;IAAE,UAAU,EAAE;EAAK,CAAC;AAExE,CAAC,EACD;EACI,KAAK,EAAE,CAAC;EACR,UAAU,EAAE,mBAAmB;EAC/B,SAAS,EAAE,CACP;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,OAAO;IAAE,UAAU,EAAE;EAAK,CAAC,EAC9D;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,IAAI;IAAE,UAAU,EAAE;EAAK,CAAC,EAC3D;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,OAAO;IAAE,UAAU,EAAE;EAAK,CAAC,EAC9D;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,SAAS;IAAE,UAAU,EAAE;EAAK,CAAC;AAExE,CAAC,EACD;EACI,KAAK,EAAE,CAAC;EACR,UAAU,EAAE,mBAAmB;EAC/B,SAAS,EAAE,CACP;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,OAAO;IAAE,UAAU,EAAE;EAAK,CAAC,EAC9D;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,IAAI;IAAE,UAAU,EAAE;EAAK,CAAC,EAC3D;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,OAAO;IAAE,UAAU,EAAE;EAAK,CAAC,EAC9D;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,SAAS;IAAE,UAAU,EAAE;EAAK,CAAC;AAExE,CAAC,EACD;EACI,KAAK,EAAE,CAAC;EACR,UAAU,EAAE,mBAAmB;EAC/B,SAAS,EAAE,CACP;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,OAAO;IAAE,UAAU,EAAE;EAAK,CAAC,EAC9D;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,IAAI;IAAE,UAAU,EAAE;EAAK,CAAC,EAC3D;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,OAAO;IAAE,UAAU,EAAE;EAAK,CAAC,EAC9D;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,SAAS;IAAE,UAAU,EAAE;EAAK,CAAC;AAExE,CAAC,EACD;EACI,KAAK,EAAE,CAAC;EACR,UAAU,EAAE,mBAAmB;EAC/B,SAAS,EAAE,CACP;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,OAAO;IAAE,UAAU,EAAE;EAAK,CAAC,EAC9D;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,IAAI;IAAE,UAAU,EAAE;EAAK,CAAC,EAC3D;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,OAAO;IAAE,UAAU,EAAE;EAAK,CAAC,EAC9D;IAAC,KAAK,EAAE,GAAG;IAAG,KAAK,EAAE,GAAG;IAAE,OAAO,EAAE,SAAS;IAAE,UAAU,EAAE;EAAK,CAAC;AAExE,CAAC,CACJ;AACD,eAAe,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EAC9B,SAASC,YAAYA,CAACC,WAAW,EAAEC,SAAS,EAAC;IACzC,IAAIC,WAAW,GAAG,EAAE;IACpBC,WAAW,CAACC,YAAY,IAAI;MACxB,KAAK,IAAIC,QAAQ,IAAID,YAAY,EAAC;QAC9B,IAAIC,QAAQ,CAACC,GAAG,KAAKN,WAAW,EAAC;UAC7BK,QAAQ,CAACE,OAAO,CAACC,GAAG,CAACC,MAAM,IAAIC,EAAE,CAAC;QACtC;MACJ;IACJ,CAAC,CAAC;EACN;EAEA,MAAM,CAACL,QAAQ,EAAEF,WAAW,CAAC,GAAGV,QAAQ,CAACG,SAAS,CAAC;EACnD,IAAIe,UAAU,GAAGN,QAAQ,CAACG,GAAG,CAACI,YAAY,iBACtCjB,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAGmB,SAAS,EAAC,WAAW;MAAAD,QAAA,EAAED,YAAY,CAACP;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpDvB,OAAA;MAAImB,SAAS,EAAC,SAAS;MAAAD,QAAA,EAClBD,YAAY,CAACL,OAAO,CAACC,GAAG,CAACC,MAAM,iBAC5Bd,OAAA;QAAIwB,OAAO,EAAEA,CAAA,KAAIpB,YAAY,CAACM,QAAQ,CAACC,GAAG,EAAEG,MAAM,CAACH,GAAG,CAAE;QAACQ,SAAS,EAAEL,MAAM,CAACW,QAAQ,GAAC,iBAAiB,GAAE,mBAAoB;QAAAP,QAAA,EACtHJ,MAAM,CAACY;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CACR,CAAC;EACF,oBACIvB,OAAA;IAAKmB,SAAS,EAAC,iBAAiB;IAAAD,QAAA,EAC3BF;EAAU;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEd;AAACpB,EAAA,CA7BuBD,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}